openapi: 3.0.0
info:
  title: 'HRIS Payroll API - Eligibility'
  version: 0.1.5
servers:
  -
    url: 'http://localhost:8088/api/'
    description: URI
components:
  parameters:
    acceptsJson:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        example: application/json
        default: application/json
  examples:
    dummyuser:
      summary: 'Dummy username and password'
      value:
        username: dummyuser
        password: secret
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  -
    name: eligibility
    description: 'Everything about Eligibility API'
paths:
  /employee/eligibility/create/{employeeId}:
    post:
      summary: 'create record'
      tags:
        - eligibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                rating:
                  type: number
                date_conferment:
                  type: string
                place_conferment:
                  type: string
                license_number:
                  type: string
                license_validity:
                  type: string
              required:
                - type
                - rating
                - date_conferment
                - place_conferment
                - license_number
                - license_validity
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: employeeId
          required: false
          schema:
            type: integer
          description: employee id
      responses:
        '"201"':
          description: 'Eligibility created message'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'employee/eligibility successfully created.'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/eligibility/search/{employeeId}/{id}':
    get:
      summary: 'get record'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: employeeId
          required: false
          schema:
            type: integer
          description: employee id
        -
          in: path
          name: id
          required: false
          schema:
            type: integer
          description: 'primary key'
        -
          in: query
          name: searchValue
          schema:
            type: string
          description: 'search value'
        -
          in: query
          name: page
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: perPage
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: field
          schema:
            type: string
          description: 'for sorting'
        -
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
          description: 'for sorting'
      responses:
        '"200"':
          description: 'return Eligibility records'
          content:
            application/json:
              schema:
                type: array
                example:
                  -
                    id: 1
                    type: string
                    rating: double
                    date_conferment: string
                    place_conferment: string
                    license_number: string
                    license_validity: string
                    created_at: '2021-01-08 22:25:53'
                    updated_at: '2021-01-08 22:25:53'
                  -
                    id: 1
                    type: string
                    rating: double
                    date_conferment: string
                    place_conferment: string
                    license_number: string
                    license_validity: string
                    created_at: '2021-01-08 22:25:53'
                    updated_at: '2021-01-08 22:25:53'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/eligibility/parameter/':
    get:
      summary: 'get parameter'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"200"':
          description: 'return parameters'
          content:
            application/json:
              schema:
                type: array
                example: ['sample' : []]
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/eligibility/update/{id}':
    put:
      summary: 'update record'
      tags:
        - eligibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                rating:
                  type: number
                date_conferment:
                  type: string
                place_conferment:
                  type: string
                license_number:
                  type: string
                license_validity:
                  type: string
              required:
                - type
                - rating
                - date_conferment
                - place_conferment
                - license_number
                - license_validity
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'Eligibility update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/eligibility/delete/{id}':
    delete:
      summary: 'delete record'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'Eligibility update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/eligibility/portal/search/{id}:
    get:
      summary: 'get portal record'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: false
          schema:
            type: integer
          description: primary key
        -
          in: query
          name: searchValue
          schema:
            type: string
          description: 'search value'
        -
          in: query
          name: page
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: perPage
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: field
          schema:
            type: string
          description: 'for sorting'
        -
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
          description: 'for sorting'
      responses:
        '"200"':
          description: 'return Eligibility records'
          content:
            application/json:
              schema:
                type: array
                example:
                  -
                    id: 1
                    employee_id: relatedTo
                    type: string
                    rating: double
                    date_conferment: string
                    place_conferment: string
                    license_number: string
                    license_validity: string
                    created_at: '2021-01-08 22:25:53'
                    updated_at: '2021-01-08 22:25:53'
                  -
                    id: 1
                    employee_id: relatedTo
                    type: string
                    rating: double
                    date_conferment: string
                    place_conferment: string
                    license_number: string
                    license_validity: string
                    created_at: '2021-01-08 22:25:53'
                    updated_at: '2021-01-08 22:25:53'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/eligibility/portal/create:
    post:
      summary: 'create portal record'
      tags:
        - eligibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                rating:
                  type: number
                date_conferment:
                  type: string
                place_conferment:
                  type: string
                license_number:
                  type: string
                license_validity:
                  type: string
              required:
                - type
                - rating
                - date_conferment
                - place_conferment
                - license_number
                - license_validity
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"201"':
          description: 'Eligibility created message'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'employee/eligibility successfully created.'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/eligibility/portal/parameter/:
    get:
      summary: 'get portal parameter'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"200"':
          description: 'return parameters'
          content:
            application/json:
              schema:
                type: array
                example: ['sample' : []]
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/eligibility/portal/update/{id}:
    put:
      summary: 'update portal record'
      tags:
        - eligibility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                rating:
                  type: number
                date_conferment:
                  type: string
                place_conferment:
                  type: string
                license_number:
                  type: string
                license_validity:
                  type: string
              required:
                - type
                - rating
                - date_conferment
                - place_conferment
                - license_number
                - license_validity
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: primary key
      responses:
        '"204"':
          description: 'Eligibility update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/eligibility/portal/delete/{id}:
    delete:
      summary: 'delete portal record'
      tags:
        - eligibility
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: primary key
      responses:
        '"204"':
          description: 'Eligibility delete message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
