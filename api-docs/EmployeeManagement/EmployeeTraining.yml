openapi: 3.0.0
info:
  title: 'HRIS Payroll API - EmployeeTraining'
  version: 0.1.8
servers:
  -
    url: 'http://localhost:8088/api/'
    description: URI
components:
  parameters:
    acceptsJson:
      name: Accept
      in: header
      required: true
      schema:
        type: string
        example: application/json
        default: application/json
  examples:
    dummyuser:
      summary: 'Dummy username and password'
      value:
        username: dummyuser
        password: secret
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  -
    name: employeetraining
    description: 'Everything about EmployeeTraining API'
paths:
  /employee/training/create/{employeeId}:
    post:
      summary: 'create record'
      tags:
        - employeetraining
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: string
                date_from:
                  type: string
                date_to:
                  type: string
                number_of_hours:
                  type: integer
                type_of_ld:
                  type: string
                sponsored_by:
                  type: string
                conducted_by:
                  type: string
                location:
                  type: string
                  enum:
                    - LOCAL
                    - FOREIGN
              required:
                - program
                - date_from
                - date_to
                - number_of_hours
                - type_of_ld
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: employeeId
          required: false
          schema:
            type: integer
          description: employee id
      responses:
        '"201"':
          description: 'EmployeeTraining created message'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'employee/training successfully created.'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/training/search/{employeeId}/{id}':
    get:
      summary: 'get record'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: false
          schema:
            type: integer
          description: 'primary key'
        -
          in: path
          name: employeeId
          required: false
          schema:
            type: integer
          description: employee id
        -
          in: query
          name: searchValue
          schema:
            type: string
          description: 'search value'
        -
          in: query
          name: show_pds
          schema:
            type: boolean
          description: 'show pds filter'
        -
          in: query
          name: location
          schema:
            type: string
            enum:
              - LOCAL
              - FOREIGN
          description: 'filtern location'
        -
          in: query
          name: page
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: perPage
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: field
          schema:
            type: string
          description: 'for sorting'
        -
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
          description: 'for sorting'
      responses:
        '"200"':
          description: 'return EmployeeTraining records'
          content:
            application/json:
              schema:
                type: array
                example:
                  -
                    id: 1
                    program: string
                    date_from: string
                    date_to: string
                    number_of_hours: integer
                    type_of_ld: string
                    sponsored_by: string
                    conducted_by: string
                    show_pds: boolean
                    created_at: '2021-01-08 23:46:35'
                    updated_at: '2021-01-08 23:46:35'
                  -
                    id: 1
                    program: string
                    date_from: string
                    date_to: string
                    number_of_hours: integer
                    type_of_ld: string
                    sponsored_by: string
                    conducted_by: string
                    show_pds: boolean
                    created_at: '2021-01-08 23:46:35'
                    updated_at: '2021-01-08 23:46:35'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/training/parameter/':
    get:
      summary: 'get parameter'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"200"':
          description: 'return parameters'
          content:
            application/json:
              schema:
                type: array
                example: ['sample' : []]
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/training/update/{id}':
    put:
      summary: 'update record'
      tags:
        - employeetraining
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: string
                date_from:
                  type: string
                date_to:
                  type: string
                number_of_hours:
                  type: integer
                type_of_ld:
                  type: string
                sponsored_by:
                  type: string
                conducted_by:
                  type: string
                location:
                  type: string
                  enum:
                    - LOCAL
                    - FOREIGN
              required:
                - program
                - date_from
                - date_to
                - number_of_hours
                - type_of_ld
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'EmployeeTraining update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  '/employee/training/delete/{id}':
    delete:
      summary: 'delete record'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'EmployeeTraining update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/training/portal/search/{id}:
    get:
      summary: 'get portal record'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: false
          schema:
            type: integer
          description: 'primary key'
        -
          in: query
          name: searchValue
          schema:
            type: string
          description: 'search value'
        -
          in: query
          name: show_pds
          schema:
            type: boolean
          description: 'show pds filter'
        -
          in: query
          name: location
          schema:
            type: string
            enum:
              - LOCAL
              - FOREIGN
          description: 'filtern location'
        -
          in: query
          name: page
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: perPage
          schema:
            type: integer
          description: 'for pagination'
        -
          in: query
          name: field
          schema:
            type: string
          description: 'for sorting'
        -
          in: query
          name: order
          schema:
            type: string
            enum:
              - ASC
              - DESC
          description: 'for sorting'
      responses:
        '"200"':
          description: 'return EmployeeTraining records'
          content:
            application/json:
              schema:
                type: array
                example:
                  -
                    id: 1
                    employee_id: relatedTo
                    training_id: relatedTo
                    date_from: string
                    date_to: string
                    number_of_hours: integer
                    show_pds: boolean
                    created_at: '2021-01-08 23:46:35'
                    updated_at: '2021-01-08 23:46:35'
                  -
                    id: 1
                    employee_id: relatedTo
                    training_id: relatedTo
                    date_from: string
                    date_to: string
                    number_of_hours: integer
                    show_pds: boolean
                    created_at: '2021-01-08 23:46:35'
                    updated_at: '2021-01-08 23:46:35'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/training/portal/create:
    post:
      summary: 'create portal record'
      tags:
        - employeetraining
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: string
                date_from:
                  type: string
                date_to:
                  type: string
                number_of_hours:
                  type: integer
                type_of_ld:
                  type: string
                sponsored_by:
                  type: string
                conducted_by:
                  type: string
                location:
                  type: string
                  enum:
                    - LOCAL
                    - FOREIGN
              required:
                - program
                - date_from
                - date_to
                - number_of_hours
                - type_of_ld
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"201"':
          description: 'EmployeeTraining created message'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'employee/training successfully created.'
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/training/portal/parameter/:
    get:
      summary: 'get portal parameter'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
      responses:
        '"200"':
          description: 'return parameters'
          content:
            application/json:
              schema:
                type: array
                example: ['sample' : []]
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/training/portal/update/{id}:
    put:
      summary: 'update portal record'
      tags:
        - employeetraining
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: string
                date_from:
                  type: string
                date_to:
                  type: string
                number_of_hours:
                  type: integer
                type_of_ld:
                  type: string
                sponsored_by:
                  type: string
                conducted_by:
                  type: string
                location:
                  type: string
                  enum:
                    - LOCAL
                    - FOREIGN
              required:
                - program
                - date_from
                - date_to
                - number_of_hours
                - type_of_ld
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'EmployeeTraining update message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
  /employee/training/portal/delete/{id}:
    delete:
      summary: 'delete portal record'
      tags:
        - employeetraining
      security:
        -
          bearerAuth: {  }
      parameters:
        -
          $ref: '#/components/parameters/acceptsJson'
        -
          in: path
          name: id
          required: true
          schema:
            type: integer
          description: 'primary key'
      responses:
        '"204"':
          description: 'EmployeeTraining delete message'
          content: null
        '"401"':
          description: 'Bearer token not authorized'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthenticated
